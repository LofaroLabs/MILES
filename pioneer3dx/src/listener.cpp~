#include <ros/ros.h>
#include <gazebo_msgs/GetModelState.h>
#include <math.h>
int main (int argc, char** argv)
{
  ros::init(argc,argv,"test_node");
  ros::NodeHandle n;
  ros::ServiceClient client = n.serviceClient<gazebo_msgs::GetModelState>("/gazebo/get_model_state");
  
  gazebo_msgs::GetModelState getmodelstate;

  getmodelstate.request.model_name= "router";
  client.call(getmodelstate);
  double r1x=getmodelstate.response.pose.position.x;
  double r1y=getmodelstate.response.pose.position.y;
  double r1z=getmodelstate.response.pose.position.z;
  printf("router1= x=%f y=%f z=%f\n",r1x,r1y,r1z);

  getmodelstate.request.model_name= "router2";
  client.call(getmodelstate);
  double r2x=getmodelstate.response.pose.position.x;
  double r2y=getmodelstate.response.pose.position.y;
  double r2z=getmodelstate.response.pose.position.z;
  printf("router2= x=%f y=%f z=%f\n",r2x,r2y,r2z);

  getmodelstate.request.model_name= "router3";
  client.call(getmodelstate);
  double r3x=getmodelstate.response.pose.position.x;
  double r3y=getmodelstate.response.pose.position.y;
  double r3z=getmodelstate.response.pose.position.z;
  printf("router3= x=%f y=%f z=%f\n",r3x,r3y,r3z);

  getmodelstate.request.model_name= "router4";
  client.call(getmodelstate);
  double r4x=getmodelstate.response.pose.position.x;
  double r4y=getmodelstate.response.pose.position.y;
  double r4z=getmodelstate.response.pose.position.z;
  printf("router4= x=%f y=%f z=%f\n",r4x,r4y,r4z);

  getmodelstate.request.model_name= "router5";
  client.call(getmodelstate);
  double r5x=getmodelstate.response.pose.position.x;
  double r5y=getmodelstate.response.pose.position.y;
  double r5z=getmodelstate.response.pose.position.z;
  printf("router5= x=%f y=%f z=%f\n",r5x,r5y,r5z);

  getmodelstate.request.model_name= "router6";
  client.call(getmodelstate);
  double r6x=getmodelstate.response.pose.position.x;
  double r6y=getmodelstate.response.pose.position.y;
  double r6z=getmodelstate.response.pose.position.z;
  printf("router6= x=%f y=%f z=%f\n",r6x,r6y,r6z);

  getmodelstate.request.model_name= "router7";
  client.call(getmodelstate);
  double r7x=getmodelstate.response.pose.position.x;
  double r7y=getmodelstate.response.pose.position.y;
  double r7z=getmodelstate.response.pose.position.z;
  printf("router7= x=%f y=%f z=%f\n",r7x,r7y,r7z);

  getmodelstate.request.model_name= "router8";
  client.call(getmodelstate);
  double r8x=getmodelstate.response.pose.position.x;
  double r8y=getmodelstate.response.pose.position.y;
  double r8z=getmodelstate.response.pose.position.z;
  printf("router8= x=%f y=%f z=%f\n",r8x,r8y,r8z);

  getmodelstate.request.model_name= "router9";
  client.call(getmodelstate);
  double r9x=getmodelstate.response.pose.position.x;
  double r9y=getmodelstate.response.pose.position.y;
  double r9z=getmodelstate.response.pose.position.z;
  printf("router9= x=%f y=%f z=%f\n",r9x,r9y,r9z);

  getmodelstate.request.model_name= "router10";
  client.call(getmodelstate);
  double r10x=getmodelstate.response.pose.position.x;
  double r10y=getmodelstate.response.pose.position.y;
  double r10z=getmodelstate.response.pose.position.z;
  printf("router10= x=%f y=%f z=%f\n",r10x,r10y,r10z);
  while(1){
    getmodelstate.request.model_name= "pioneer3dx";
    client.call(getmodelstate);
    double p3x=getmodelstate.response.pose.position.x;
    double p3y=getmodelstate.response.pose.position.y;
    double p3z=getmodelstate.response.pose.position.z;
    printf("p3x Location: x=%f y=%f\n",p3x,p3y);
    printf("Distance from router1: %f\n", sqrt(pow(p3x-r1x,2)+pow(p3y-r1y,2)+pow(p3z-r1z,2)));
    printf("Distance from router2: %f\n", sqrt(pow(p3x-r2x,2)+pow(p3y-r2y,2)+pow(p3z-r2z,2)));
    printf("Distance from router3: %f\n", sqrt(pow(p3x-r3x,2)+pow(p3y-r3y,2)+pow(p3z-r3z,2)));
  } 
}
